{"ast":null,"code":"import _toConsumableArray from\"/home/viale/Bureau/MemoryGame/21-06-js-remotefr-p2-r-uv/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/home/viale/Bureau/MemoryGame/21-06-js-remotefr-p2-r-uv/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/home/viale/Bureau/MemoryGame/21-06-js-remotefr-p2-r-uv/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/viale/Bureau/MemoryGame/21-06-js-remotefr-p2-r-uv/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useRef,useState}from\"react\";import'./memorycards.css';import uniqueCardsArray from'./Dataimg';import HeaderCard from\"./HeaderCard\";import Card from\"./Card\";import\"bootstrap/dist/css/bootstrap.min.css\";import{Col,Row}from\"react-bootstrap\";// FisherYates Modern Shuffle Algorithm\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function swap(array,i,j){var temp=array[i];array[i]=array[j];array[j]=temp;}function shuffleCards(array){var length=array.length;for(var i=length;i>0;i--){var randomIndex=Math.floor(Math.random()*i);var currentIndex=i-1;swap(array,currentIndex,randomIndex);}return array;}var MemoryCard=function MemoryCard(){var _useState=useState(function(){return shuffleCards(uniqueCardsArray.concat(uniqueCardsArray));}),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),openCards=_useState4[0],setOpencards=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),matchedCards=_useState6[0],setMatchedcards=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),moves=_useState8[0],setMoves=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showModal=_useState10[0],setShowModal=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),shouldDisableAllCards=_useState12[0],setShouldDisableAllCards=_useState12[1];var _useState13=useState(JSON.parse(localStorage.getItem(\"bestScore\"))||Number.POSITIVE_INFINITY),_useState14=_slicedToArray(_useState13,2),bestScore=_useState14[0],setBestScore=_useState14[1];var timeout=useRef(null);var disable=function disable(){setShouldDisableAllCards(true);};var enable=function enable(){setShouldDisableAllCards(false);};var checkCompletion=function checkCompletion(){if(Object.keys(matchedCards).length===uniqueCardsArray.length){setShowModal(true);var highScore=Math.min(moves,bestScore);setBestScore(highScore);localStorage.setItem(\"bestScore\",highScore);}};var evaluate=function evaluate(){var _openCards=_slicedToArray(openCards,2),first=_openCards[0],second=_openCards[1];enable();if(cards[first].type===cards[second].type){setMatchedcards(function(prev){return _objectSpread(_objectSpread({},prev),{},_defineProperty({},cards[first].type,true));});setOpencards([]);// alert(\"you have found a match\");\nreturn;}timeout.current=setTimeout(function(){setOpencards([]);},500);};var handleCardClick=function handleCardClick(index){if(openCards.length===1){setOpencards(function(prev){return[].concat(_toConsumableArray(prev),[index]);});setMoves(function(moves){return moves+1;});disable();}else{clearTimeout(timeout.current);setOpencards([index]);}};useEffect(function(){var timeout=null;if(openCards.length===2){timeout=setTimeout(evaluate,300);}return function(){clearTimeout(timeout);};// eslint-disable-next-line\n},[openCards]);useEffect(function(){// eslint-disable-next-line\ncheckCompletion();// eslint-disable-next-line\n},[matchedCards]);var checkIsFlipped=function checkIsFlipped(index){return openCards.includes(index);};var checkIsInactive=function checkIsInactive(card){return Boolean(matchedCards[card.type]);};var handleRestart=function handleRestart(){setMatchedcards({});setOpencards([]);setShowModal(false);setMoves(0);setShouldDisableAllCards(false);setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));};return/*#__PURE__*/_jsxs(\"div\",{className:\"memorygame_body\",children:[/*#__PURE__*/_jsx(HeaderCard,{moves:moves,bestScore:bestScore,handleRestart:handleRestart}),/*#__PURE__*/_jsx(\"div\",{className:\"memorycard_container\",children:/*#__PURE__*/_jsx(Row,{children:cards.map(function(card,index){return/*#__PURE__*/_jsx(Col,{className:\"g-2 gy-4\",xs:4,md:3,lg:3,xl:3,children:/*#__PURE__*/_jsx(Card,{card:card,index:index,isDisabled:shouldDisableAllCards,isInactive:checkIsInactive(card),isFlipped:checkIsFlipped(index),onClick:handleCardClick},index)});})})}),/*#__PURE__*/_jsx(\"hr\",{className:\"memory_game_hr\"})]});};export default MemoryCard;","map":{"version":3,"sources":["/home/viale/Bureau/MemoryGame/21-06-js-remotefr-p2-r-uv/src/components/memory-card/MemoryCards.jsx"],"names":["React","useEffect","useRef","useState","uniqueCardsArray","HeaderCard","Card","Col","Row","swap","array","i","j","temp","shuffleCards","length","randomIndex","Math","floor","random","currentIndex","MemoryCard","concat","cards","setCards","openCards","setOpencards","matchedCards","setMatchedcards","moves","setMoves","showModal","setShowModal","shouldDisableAllCards","setShouldDisableAllCards","JSON","parse","localStorage","getItem","Number","POSITIVE_INFINITY","bestScore","setBestScore","timeout","disable","enable","checkCompletion","Object","keys","highScore","min","setItem","evaluate","first","second","type","prev","current","setTimeout","handleCardClick","index","clearTimeout","checkIsFlipped","includes","checkIsInactive","card","Boolean","handleRestart","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport './memorycards.css';\nimport uniqueCardsArray from './Dataimg';\nimport HeaderCard from \"./HeaderCard\";\nimport Card from \"./Card\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col, Row } from \"react-bootstrap\";\n\n// FisherYates Modern Shuffle Algorithm\nfunction swap(array, i, j) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\nfunction shuffleCards(array) {\n  const length = array.length;\n  for (let i = length; i > 0; i--) {\n    const randomIndex = Math.floor(Math.random() * i);\n    const currentIndex = i - 1;\n    swap(array, currentIndex, randomIndex);\n  }\n  return array;\n}\n\nconst MemoryCard = () => {\n  const [cards, setCards] = useState(() =>\n    shuffleCards(uniqueCardsArray.concat(uniqueCardsArray))\n  );\n  const [openCards, setOpencards] = useState([]);\n  const [matchedCards, setMatchedcards] = useState({});\n  const [moves, setMoves] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [shouldDisableAllCards, setShouldDisableAllCards] = useState(false);\n  const [bestScore, setBestScore] = useState(\n    JSON.parse(localStorage.getItem(\"bestScore\")) || Number.POSITIVE_INFINITY\n  );\n  const timeout = useRef(null);\n\n  const disable = () => {\n    setShouldDisableAllCards(true);\n  };\n\n  const enable = () => {\n    setShouldDisableAllCards(false);\n  };\n\n  const checkCompletion = () => {\n    if (Object.keys(matchedCards).length === uniqueCardsArray.length) {\n      setShowModal(true);\n      const highScore = Math.min(moves, bestScore);\n      setBestScore(highScore);\n      localStorage.setItem(\"bestScore\", highScore);\n    }\n  };\n\n  const evaluate = () => {\n    const [first, second] = openCards;\n    enable();\n    if (cards[first].type === cards[second].type) {\n      setMatchedcards((prev) => ({ ...prev, [cards[first].type]: true }));\n      setOpencards([]);\n      // alert(\"you have found a match\");\n      return;\n    }\n    timeout.current = setTimeout(() => {\n      setOpencards([]);\n    }, 500);\n  };\n\n  const handleCardClick = (index) => {\n    if (openCards.length === 1) {\n      setOpencards((prev) => [...prev, index]);\n      setMoves((moves) => moves + 1);\n      disable();\n    } else {\n      clearTimeout(timeout.current);\n      setOpencards([index]);\n    }\n  };\n  useEffect(() => {\n    let timeout = null;\n    if (openCards.length === 2) {\n      timeout = setTimeout(evaluate, 300);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n    // eslint-disable-next-line\n  }, [openCards]);\n\n  useEffect(() => {\n    // eslint-disable-next-line\n    checkCompletion();\n    // eslint-disable-next-line\n  }, [matchedCards]);\n\n  const checkIsFlipped = (index) => {\n    return openCards.includes(index);\n  };\n  const checkIsInactive = (card) => {\n    return Boolean(matchedCards[card.type]);\n  };\n  const handleRestart = () => {\n    setMatchedcards({});\n    setOpencards([]);\n    setShowModal(false);\n    setMoves(0);\n    setShouldDisableAllCards(false);\n    setCards(shuffleCards(uniqueCardsArray.concat(uniqueCardsArray)));\n  };\n\n  return (\n    <div className=\"memorygame_body\">\n      <HeaderCard\n        moves={moves}\n        bestScore={bestScore}\n        handleRestart={handleRestart}\n      />\n      <div className=\"memorycard_container\">\n        <Row>\n          {cards.map((card, index) => {\n            return (\n              <Col className=\"g-2 gy-4\" xs={4} md={3} lg={3} xl={3} >\n                <Card \n                  key={index}\n                  card={card}\n                  index={index}\n                  isDisabled={shouldDisableAllCards}\n                  isInactive={checkIsInactive(card)}\n                  isFlipped={checkIsFlipped(index)}\n                  onClick={handleCardClick}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </div>\n      <hr className=\"memory_game_hr\"/>\n    </div>\n  );\n};\n\n\nexport default MemoryCard;"]},"metadata":{},"sourceType":"module"}